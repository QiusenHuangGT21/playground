{"version":3,"sources":["logo.svg","Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Title","Typography","Room","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","quietLevel","loading","_this2","radioStyle","margin","display","height","lineHeight","react_default","a","createElement","card","row","type","align","col","span","es_radio","Group","disabled","buttonStyle","defaultValue","String","onChange","e","console","log","target","value","axios","get","then","setState","Button","style","Component","App","data","res","className","src_Room","status","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.88261a34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport {Col, Row} from 'antd';\nimport {Radio} from 'antd';\nimport {Typography} from 'antd'\nimport {Card} from 'antd'\nimport axios from \"axios\";\n\nconst {Title} = Typography;\n\n\nclass Room extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: null,\n            quietLevel: null,\n            loading: false\n        };\n    }\n\n    render () {\n        //const nameStyle = {display:'block'}\n\n        const radioStyle = {\n            margin:\"15px\",\n            display: 'block',\n            height: '30px',\n            lineHeight: '30px',\n          };\n        // if (this.props.loading === false) {\n        //     if (this.state.name == null) {\n        //         this.setState({name: this.props.name})\n        //     }\n        //     if (this.state.quietLevel == null) {\n        //         this.setState({quietLevel: this.props.quietLevel})\n        //     }\n        // }\n        return (\n            <div>\n                <Card loading={this.props.loading}>\n                <Row type=\"flex\" align=\"middle\">\n                    <Col span={8}>\n                        <Title>{this.props.name}</Title>\n                    </Col>\n                    <Col span={16}>\n                    <Radio.Group disabled={this.state.loading} buttonStyle=\"solid\" defaultValue={String(this.props.quietLevel)} \n                        onChange={(e) => {\n                            console.log(e.target.value);\n                            this.state.loading = true;\n                            axios.get('http://creat-ive.net/app/status-app/api/update?name=' \n                            + this.props.name \n                            + '&status=' \n                            + e.target.value)\n                            .then(this.setState.loading=false);\n                            \n                        }}\n                        >\n                        <div>\n                        <Radio.Button value=\"1\" style={radioStyle}>Away</Radio.Button>\n                        </div>\n                        <div>\n                        <Radio.Button value=\"2\" style={radioStyle}>Working</Radio.Button>\n                        </div>\n                        <div>\n                        <Radio.Button value=\"3\" style={radioStyle}>Chilling</Radio.Button>\n                        </div>\n                        <div>\n                        <Radio.Button value=\"4\" style={radioStyle}>Sleeping</Radio.Button>\n                        </div>\n                    </Radio.Group>\n                    </Col>\n                </Row>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Room","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Row, Col} from 'antd'\nimport Room from './Room.js'\nimport axios from 'axios'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    }\n  }\n\n  render () {\n    if (this.state.data == null) {\n      axios.get('http://creat-ive.net/app/status-app/api/init').then(res => {\n            this.setState({data:res.data})\n        })\n      return (\n        <div className=\"App\">\n          <Room loading={true}/>\n          <Room loading={true}/>\n        </div>\n      );\n    } else {\n    return (\n        <div className=\"App\">\n          <Room name={this.state.data[0].name} quietLevel={this.state.data[0].status}/>\n          <Room name={this.state.data[1].name} quietLevel={this.state.data[1].status}/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}